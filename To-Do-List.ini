[작업 후딱 끝내기]
Perpecture 라이센스가 끝나면 Subscription으로 전환한다.
- 우리나라 회사가 외산 솔루션 업체에게 끌려다니는 것은 바람직하지 않다.
- 내재화 하는 방법으로 간다 => 대비 가격적 메리트를 보여준다. - 협력업체로 성장할 수 있도록 도와준다.
- 제품화 작업에 있어서 아이디어를 낸다.

{"command":"sim-test-each|2", "parameter":"queueName|EQP","parameter2":"loopcount|200", "parameter3":"sleeptime|10","parameter4":"테스트용 메시지 생성하기"}
{"command":"sim-test-each|2", "parameter":"queueName|EQP","parameter2":"loopcount|100", "parameter3":"sleeptime|10","parameter4":"테스트용 메시지 생성하기"}

[처리해야 할 것들]
1) 카운터 작성 (완료)
2) 시뮬레이터에 의한 이벤트 생성 - SIM-EQP (완료)
    - event 생성해서 보내주기 (진행 중) - EventType - ALARM, RECIPE, TOOLDATA, EVENT
    - 이벤트 메시지를 생성한다. (완료) 
    	sb.append("{");
		sb.append(String.format("\"command\":\"%s\",","spawn-request"));
		sb.append(String.format("\"parameter\":\"%s\",",eqpId));
		sb.append(String.format("\"parameter2\":\"%s\",",rc.next()));
		sb.append(String.format("\"parameter3\":\"%s\",",msgId));
		sb.append(String.format("\"parameter4\":\"%s\"",message));
		sb.append("}");
    - Refactoring 메시지 받아서 처리하는 SW-worker (완료)
    - 메시지 카운팅 (적용 완료-테스트 진행 중)
    - 로그 만들기

3) 각 구성 요소 Adminstratin용 함수 
    * ASutility
    * EMSutility
    * FTLutility
    * FileChecker - Duplication 발생 방지
    * 기본 기능으로 중요한 것들을 도출해야 한다.
    
4) LM(Log Manager)
    - RealTime/Batch 타입
    - 동기 전송/비동기 전송

5) DBLM 기본 실행 구조 만들기
    - JSON String으로 주고 받는다.
    - 모든 데이터를 JSON화 하는 작업을 수행한다.
    - 장비별 처리를 위한 설계를 진행한다. 구현

6) PDM - AS, H2, File System
    - 데이터 구조화
    - 문제를 해결한다.

7) MDM - 문제 진단 및 해결을 위한 방향을 제시한다.
    - 


8) MR 설계 및 기본안 완료



[내일 해야 할 일]
1) EMS NAS spec 확인 및 해결 방안
   4가지 영역
2) 기본 기능 처리시
   2-0  최초 기동 시 SWN 정보 SO에 등록 (완료)
   2-1. 큐 생성시 - EQP 정보 생성 (완료)
   2-2. SWNode 할당 (최대치가 될 때까지) (완료)  - roudn-robin
   2-3. SWN 워커 정보 보관 (정보 생성 여부 확인) (완료)
   2-4. SWworker 생성 정보 받아서 처리하기 (완료)
   2-5. SWworker 종료시 정리 (완료)

[To-Do-List 2022-11-13 일]
0) SO 주요 기능 및 SWN 기능 구현 - Dynamic Loading 파트 처리
    AppSpace 복수의 Node 설정
    - 필요한 내용을 받으면 해당 쪽에서만 처리한다.
    - 요청들어오면 삭제한다.
    - 외부로 부터 메시지를 받으면 해당 항목을 삭제해준다.  (설정이 변경되면 빠져나간다.)
    - 한개의 메시지를 처리하고 나서 (Moving - SWNode => SWNode 처리할 경우)
    - 카프카 메시지를 사용하셔도 됩니다. 계약 자체가 Messaging으로 이루어져 있어서


1) SO 저장된 정보    
    String lastAllocatedSWN =
    Map<String swnodeId,  ArrayList<eqpId>> = new HashMap<>();  

    EQPInfo
        private String eqpId = "";	
        private String eqpStatus = "";
        private String swnodeId = "";
        private String workerId = "";
        private String workerStatus = "";
        private long lastUpdateTime = 0;
    

    =============================================================

    // 기동하면서 자신의 정보를 송신한다.
    // 현재 상태 정보를 보내준다.
    // 정보를 보내준다.
    SWNNODE
        SWNODE_ID

    
            
        
    
2) 데이터 구조
    - SENSOR_MASTER        
    - EQP_MASTER    
    - LOT_MASTER
    - WAFER_MASTER
    

3) SW-Worker Inforamtion

concat("&lf;* hostname: ",$appNodeName,  
"&lf;* app node name: ",bw:getModuleProperty("BW.APPNODE.NAME"),
"&lf;* app space name: ",bw:getModuleProperty("BW.APPSPACE.NAME"),
"&lf;* deployment unit name: ",bw:getModuleProperty("BW.DEPLOYMENTUNIT.NAME"),
"&lf;* deployment unit type: ",bw:getModuleProperty("BW.DEPLOYMENTUNIT.TYPE"),
"&lf;* deployment unit version: ",bw:getModuleProperty("BW.DEPLOYMENTUNIT.VERSION"),
"&lf;* module name: ",bw:getModuleProperty("BW.MODULE.NAME"),
"&lf;* module version: ",bw:getModuleProperty("BW.MODULE.VERSION"),
"&lf;* application name: ",bw:getModuleProperty("BW.APPLICATION.NAME"),
"&lf;* application full version: ",bw:getModuleProperty("BW.APPLICATION.FULLVERSION"),
"&lf;* application full version: ",bw:getModuleProperty("BW.PROCESS.STACK")
)
    


[To-Do-List 2022-11-12 토]
-- 연결시작
-----------------------------------------------------------------------------------
0) Tibco Object를 넘길 수 있는지 확인 (Unnamed module type cast 오류 발생)
1) Object Serializable 테스트 - 넘겨서 받을 수 있는지 확인한다.   (성공)
java.lang.ClassCastException: class [B cannot be cast to class com.skhynix.narf.Demo ([B is in module java.base of loader 'bootstrap'; com.skhynix.narf.Demo is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader @781711b7)
	at com.skhynix.narf.LoadDynamic.invokeMethod(LoadDynamic.java:234)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.tibco.bw.palette.java.runtime.JavaInvokeActivity.invokeMethod(JavaInvokeActivity.java:870)
	at com.tibco.bw.palette.java.runtime.JavaInvokeActivity.execute(JavaInvokeActivity.java:151)
	at com.tibco.bw.core.runtime.bx.BWBxActivityBridgeImpl.doEval(BWBxActivityBridgeImpl.java:863)
	at com.tibco.bw.core.runtime.bx.BWBxActivityBridgeImpl.eval(BWBxActivityBridgeImpl.java:748)
	at com.tibco.bx.core.behaviors.activity.BxExtensionBehavior.doEval(BxExtensionBehavior.java:166)
	at com.tibco.bx.core.behaviors.activity.BxActivityBaseBehavior.eval(BxActivityBaseBehavior.java:892)
	at com.tibco.bx.core.behaviors.activity.BxActivityBaseBehavior.eval(BxActivityBaseBehavior.java:1)
	at com.tibco.pvm.infra.api.impl.util.director.IpmEventDirectorBase.handleModelEvent(IpmEventDirectorBase.java:195)
	at com.tibco.pvm.infra.api.impl.util.director.IpmEventDirectorBase.handleEvent(IpmEventDirectorBase.java:111)
	at com.tibco.pvm.infra.support.work.impl.WorkItemAbstract.execute(WorkItemAbstract.java:189)
	at com.tibco.pvm.im.rt.xm.util.work.ImxSTWorkRunnable.doWorkBlock(ImxSTWorkRunnable.java:170)
	at com.tibco.pvm.infra.services.engine.impl.STWorkRunnable.run(STWorkRunnable.java:50)
	at com.tibco.pvm.im.rt.xm.util.work.ImxSTWorkRunnable.run(ImxSTWorkRunnable.java:62)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
-----------------------------------------------------------------------------------
2) Loading, 
2) PDM, Log Manager, Message Router 설계 작업
3) SW-Worker, DB Connection Info, AS session Object, 
4) Messaging; KAFKA/ FTL/ EMS 연결 정보 관리 및 로딩 - 제대로 체크해야 할 것이 있다면 무엇인지 를 확
5) 속도체크 (EMS non-persistent & persistent 관련)

- 타켓 시스템
- 멀티 메시징 시스템에 대한 집중적 테스트
- 

[To-Do-List 2022-10-23 일]
1) 전체 시스템 플로우 Skeleton - 작업마무리
2) 로그 매니저 설계 마무리
    - Queue에 넣어놓을 것인가? (No)
    - 바로 쏟아준다.
    - BW 프로세스에서 사용할 Log Method


[BW 기본 정의 내용가져올 수 있는 정보]
* hostname: localhost
* app node name: dcmnode1
* app space name: DCM
* deployment unit name: NARF-SW.application
* deployment unit type: Application
* deployment unit version: 1.0
* module name: NARF-SW
* module version: 1.0.0.20221023064714
* application name: NARF-SW.application
* application full version: 1.0.0
* application full version: narf-sw.Activator

0) Log Manager 설계 마무리 - Heartbeat 시스템 (상태 정보 업데이트) - AS/FTL MAP 정보 기반으로 강제 종료시 인식하는 방법 ()
1) mLogger를 새롭게 만들고, 거기에 해드


[To-Do-List 2022-10-22 토]
주요 기능 1차 레벨 설계
=> 껍데기 작업 마무리 - 주요 껍데기 작업 마무리 => 흐름 => 1차 Refactoring
=> 호칭과 제대로 된 내용 정리 - 제작업 수행:
=> 


2022-10-22T10:50:59,163 INFO  [bwEngThread:In-Memory Process Worker-1] com.tibco.bw.palette.generalactivities.Log.NARF-SO.RecvLog - 신규 큐: EQP1 이 생성되었음을 감지하였습니다.
2022-10-22T10:50:59,190 INFO  [bwEngThread:In-Memory Process Worker-1] com.tibco.bw.palette.generalactivities.Log.NARF-SO.AfterSendLog - 메시지:  
{"eqp_id":"EQP1","swnode_id":"swnode_01","msg":"새롭게 장비가 추가되었습니다. Worker 생성 필요."} 

0) Service Worker Manager
    0.1 서비스 생성 시 - Eqiupment ID, Application Name
    0.2 

1) Log LogManager
    [Globally 1개]
    HashMap<String, LogAgent>
    1.1 Application Name | ProcessId | Equipment ID 동일하게 관리한다.
        - [SYSLOG] LogAgent
        - [BIZLOG] SysLogAgent
    1.2 On/Off 기능        
    1.3 FTL/KAFKA Handler 정보    

2) Dynamic Business Logic Manager
    2.1 - 비즈니스 로직 조회/생성/삭제/
    2.2 - 

3) Channel & Equipment Information Manager
    3.1 - 

4) Meta Data Manager

5) Persistence Data Manager

6) Node Metric Collector
    - 현재 시스템의 정보를 수집하여 - AS에 저장해준다.
    - AS - 제공
    - 


************************* Dependency 처리하기 ********************************
<dependencies>
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-api</artifactId>
	    <version>1.7.36</version>
	</dependency>
</dependencies>
************************* Dependency 처리하기 ********************************

has not been localized: TIBCO-BW-ADMIN-500417: Error encountered starting application on AppNode [dcmnode]: com.tibco.bw.thor.management.client.ClientException: Not Found (404)

[To-Do-List 2022-10-21 금]
0) 기술 점검 항목
    [호출한 내용 기준]
    1. 값은 Map 또는 String 형태로 넘겨준다. - Parameter: String | Return: String
    2. 로그: FTL/KAFKA 
        - 로그: 파일로 저장하는 프로세스 별도로 구성 (LogAgent)
        - SB-FTL 필터링 및 LiveMart 구성
        - Spotfire에서 분석
        - EMS/FTL로 제어 (완료)
            = On/Off, LogDestination 정보
    3. Multi Handler (완료)
    4. 삭제 처리시 문제점: => 같이 로딩된 dll. jni 파일은 메모리에서 정리가 불가능한다. (어쩔수 없이 쫑난다 삭제할 수 있는 방법 찾기)


        ==> OSGi 번들화에 대한 확실한 결과를 만들어준다.

    - JSON 오브젝트 넘겨주기 (unnamed 모듈의 주고 받기는 불가능) (장기적 관점에서 준비)
    - Interface 으로 받아서 실행이 가능한지 여부 확인  예) Driver   (불가능) (Named 일때만 가능하다.)
    - 객체 변경 후 로그 변화 확인
        org.json.simple.JSONObject is in unnamed module of loader java.net.URLClassLoader 
        @28be0f18; org.json.simple.JSONObject is in unnamed module of loader org.eclipse.osgi.internal.loader.EquinoxClassLoader
    - 모듈

1) LogManager 설계 
    - 제어단위: 각 모듈레벨 (생성 시 등록) 
    - 제어방식: FTL 또는 EMS
    - JSON 인자 전달 가능 여부 확인

2) CEIM 연계 설계 완료

3) DBLM => 로딩하고 실행하고 
    - 각 비지니스 상속 Interface
        onstartup  - 참조회수 증가 (리소스 할당)
        onshutown  - 참조회수 감소 (리소스 제거)
        doBusiness - 참조회수 증가        
        getStatus  - 상태
        getVersion - 버전정보 조회        
    - 멀티 비즈니스 수행 요건: 비즈니스 상호간에 주고 받아야 할 항목에 대해서 상호 명확하게 알고 있어야 한다.
    - 인자로 넘겨받아할 형식 결정
    

    - DBLM 
        적재 비즈니스 목록 조회 (적재일자/버전/사이즈/실행여부/참조횟수)
        비즈니스 조회 (버전/작업자/생성일자/적재일자/사이즈/실행여부/참조횟수)
        비즈니스 초기화 (현재-적재된 )
        비즈니스 재로딩 (삭제)
        


    - 

4) 실시간 모니터링 설계 완료


[To-Do-List 2022-10-20]
0) 확인 사항
   => Map을 넘겨받을 수 있다. (완료)
   => 인터페이스를 선언하고 만든 내용을 공유할 수 있을까?
   => 

1) LogManager 디자인 및 처리 방법 (완료)
    - log4j 사용 방법 및 충돌 예장 - 정리 java.util.log 사용 (완료)
    - 기존 BusinessWorks 내부 사용과 충돌 피하기 (완료)
    - Interface 사용 방법에 관해서 (테스트 진행-실패)
        - 값은 범주내에 있는 경우 로딩 동적 로딩 후 사용이 가능한 것인가?
        - 넘겨받은 내용을 기준으로 사용이 가능한가.    


2) DB ConnectionPool 사용 관련 처리 확인 - 사용하는 방법에 대해서 고민한다.    
    - 사용가능지 확인한다. (수정해서 적용해본다.)
    - 경로만 제대로 잡으면 될듯 싶습니다. (문제가 있는지 확인해봐야 한다.)

3) CEIM 관련 위한 테스트 준비 (기술적인 문제에 대한 접근 필요)
4) 

[To-Do-List 2022-10-19]
1) AS 완료 - 기본
2) DB 완료 - 기본    
3) FTL/EMS/KAFKA - 완료 기본


[To-Do-List]
1) 도커 실행하기 
    - 설치하고 실행하기
    - 완료 (WSL 문제 해결 필요 - Hyper-V로 할지 결정 필요)
2) AS 4.8 실행하기 (완료)
    FTL 6.8.1 실행하기 (완료)    
3) KAFKA 설치하기 및 실행하기
    CentOS 7 - 설치 버전
    테스트 완료    
4) AS Put 테스트하기(완료)
    연결설정 완료
    테스트 실행 (총 1000개 단위)
    Get/Put
    느려지는 특별한 이유가 없습니다. (10,000)
    non-check Batch Put Operation
      1,000 -   3.3초
     10,000 -  24.0초
    100,000 - 204.0초 (3분44초)
    
    check - Batch Put Operation
      1,000 -   3.3초
     10,000 -  24.0초
    100,000 - 240.0초


5) Chrome Expenses - 입력하기
6) FY23 매출 정리해서 입력해놓기
7) TEA 설정 (완료)
    a. PostgreSQL 설정하기
    b. Oracle 설정하기 
    c. 
    d.    
8) 경로 지정 및 설치하기


